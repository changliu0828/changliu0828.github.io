<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Algorithm on Chang Liu&#39;s Blog</title>
    <link>http://changliu0828.github.io/tags/algorithm/</link>
    <description>Recent content in Algorithm on Chang Liu&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Thu, 14 Feb 2019 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="http://changliu0828.github.io/tags/algorithm/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>根据在线时间推荐好友</title>
      <link>http://changliu0828.github.io/post/2019/02/14/%E6%A0%B9%E6%8D%AE%E5%9C%A8%E7%BA%BF%E6%97%B6%E9%97%B4%E6%8E%A8%E8%8D%90%E5%A5%BD%E5%8F%8B/</link>
      <pubDate>Thu, 14 Feb 2019 00:00:00 +0000</pubDate>
      
      <guid>http://changliu0828.github.io/post/2019/02/14/%E6%A0%B9%E6%8D%AE%E5%9C%A8%E7%BA%BF%E6%97%B6%E9%97%B4%E6%8E%A8%E8%8D%90%E5%A5%BD%E5%8F%8B/</guid>
      <description>玩过类似魔兽世界这种网游的朋友，应该都有组团刷副本的经历。然而有些时候我们会发现，虽然加了很多游戏好友，但自己想刷副本时经常会缺“奶”，缺“T”。能不能根据玩家在线的时间段推荐相似的好友呢？
思考 推荐的本质是排序。给用户推荐用户，就是要找到一个相似度评估函数来衡量两个用户的在线时间段是否相似。然后把目标玩家与所有玩家的相似度一一计算，并按序推荐。
在介绍我的做法前，列三个遇到的问题：
 如何表示每个玩家的在线习惯，新玩家怎么办？ 如何设计相似度评估函数？ 系统如何支持千万以上量级的玩家？  如果是你，如何解决上面的问题。
我的做法 在线向量 使用一个24维向量描述用户24个小时的在线习惯，每一维表示玩家在此时刻内在线的期望，称为在线向量。
如下图，假设我们有一个玩家A，他某天在12:00到13:00之间上线了一会，晚上在20点过也上线了一会。
我们如果粗略的认为A在12:00-13:00，20:00-21:00之间和的在线概率为1，就得到了下图中的在线向量。
如果从长期来看，将一段时间内每天的时间向量取平均值，就得到了这段时间的平均向量。下图中的绿色方框是玩家A经过四天的观察得到的在线向量，即
$$ V_A = (0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.5, 0.25, 0, 0, 0, 0, 0, 0, 0.25, 0, 0, 0) $$
使用在线向量，我们可以粗略刻画玩家在某个时间点在线的期望。此外，在线向量的norm也在一定程度上刻画了用户的活跃情况，对于频繁上线的用户，其在线向量的norm会大于不常上线的用户。我们可以利用这点，尽量给推荐更加活跃的用户作为好友。
在线相似度 对于两个用户之间的在线相似度，我们使用两人的在线向量的內积表示。这个內积可以理解为两个玩家在一天中“相遇”的期望。
$$ S_{AB} = V_A \cdot V_B $$
假设我们有3个用户，
$$ \begin{aligned} V_A &amp;amp; = (0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.</description>
    </item>
    
  </channel>
</rss>